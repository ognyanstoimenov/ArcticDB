name: Create next release branch

on:
  workflow_dispatch:
    inputs:
      target:
        description: 'Target version to compare. If omitted, the latest release from github will be used. Exmaple: v1.2.3'
        required: false

jobs:
  get-prs:
    name: Parse PRs labels and create next release branch
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      repository-projects: write
    outputs:
      new_branch: ${{ steps.new-branch.outputs.new_branch }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: "Get default branch sha"
        id: get_sha
        run: |
           BASE_SHA=$(git rev-parse ${{ github.event.repository.default_branch }})
           echo "BASE_SHA=$BASE_SHA" >> $GITHUB_ENV
           echo "Release branch will be cut from $BASE_SHA"
      
      - name: "Get latest release"
        if: ${{ inputs.target == '' }}
        id: get_latest_release
        uses: InsonusK/get-latest-release@v1.1.0
        with:
          myToken: ${{ github.token }}
          exclude_types: "draft|prerelease"

      - name: Verify branch format
        id: verify_branch
        uses: actions/github-script@v7
        with:
          script: |
            const target = '${{ inputs.target || steps.get_latest_release.outputs.tag_name }}';
            const targetPattern = /^v(\d+)\.(\d+)\.(\d+)$/;
            if (targetPattern.test(target)) {
              const targetBranch = target.slice(1);
              core.setOutput('target_branch', targetBranch);
            } else {
              core.setFailed('Error: Target tag is not in the valid vX.Y.Z format');
            }

      - name: Get prs between
        uses: VanOns/get-merged-pull-requests-action@v1
        id: pull_requests
        with:
          repo: ognyanstoimenov/ArcticDB
          github_token: ${{ github.token }}
          current_tag: ${{ env.BASE_SHA }}
          previous_tag: ${{ steps.verify_branch.outputs.target_branch }}
          return_type: "all"

      - name: Get labels of PRs and determine increment type
        id: get_increment_type
        uses: actions/github-script@v7
        env:
          PULL_REQUESTS: ${{ steps.pull_requests.outputs.pull_requests }}
          MAJOR_LABEL: major
          MINOR_LABEL: minor
          PATCH_LABEL: patch
        with:
          script: |
            if (!process.env.PULL_REQUESTS) {
              core.setFailed('Error: No PRs found between branches');
              process.exit();
            }
            const labels = JSON.parse(process.env.PULL_REQUESTS).flatMap(pr => pr.labels.map(label => label.name));
            core.info(`Labels: ${labels.join(', ')}`);
            let incrementType = 'patch';
            if (labels.includes(process.env.MAJOR_LABEL)) {
              console.log("Major changes found! Should increase major version.");
              incrementType = 'major';
            } else if (labels.includes(process.env.MINOR_LABEL)) {
              console.log("Minor changes found! Should increase minor version.");
              incrementType = 'minor';
            } else if (labels.includes(process.env.PATCH_LABEL)) {
              console.log("Patch changes found! Should increase patch version.");
            } else {
              console.log("No PRs labeled patch, minor or major found! Defaulting to 'patch'.");
            }
            core.setOutput('increment_type', incrementType);

      - name: Calculate next version
        id: get-next-version
        uses: WyriHaximus/github-action-next-semvers@v1.2.1
        with:
          version: ${{ steps.verify_branch.outputs.target_branch }}
      
      - name: Create branch
        uses: peterjgrainger/action-create-branch@v2.2.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          branch: ${{ steps.get-next-version.outputs[steps.get_increment_type.outputs.increment_type] }}
          sha: ${{ env.BASE_SHA }}

  rc_release:
    uses: ./.github/workflows/rc_release.yml
    needs: get-prs
    with:
      branch_name: ${{ needs.get-prs.outputs.new_branch }}